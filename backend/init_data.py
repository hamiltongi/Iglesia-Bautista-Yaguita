"""
Script d'initialisation des donn√©es de base pour l'√©glise
"""
import asyncio
import os
from dotenv import load_dotenv
from pathlib import Path
from motor.motor_asyncio import AsyncIOMotorClient
from datetime import datetime, timedelta
import uuid

# Load environment variables
ROOT_DIR = Path(__file__).parent
load_dotenv(ROOT_DIR / '.env')

# MongoDB connection
mongo_url = os.environ.get('MONGO_URL')
db_name = os.environ.get('DB_NAME', 'test_database')
client = AsyncIOMotorClient(mongo_url)
db = client[db_name]

async def init_events():
    """Initialize default events"""
    events = [
        {
            "id": str(uuid.uuid4()),
            "title": "Conf√©rence Annuelle 2025",
            "date": "2025-03-15",
            "time": "18:00",
            "description": "Grande conf√©rence spirituelle avec invit√©s sp√©ciaux internationaux. Un moment privil√©gi√© de communion et d'√©dification mutuelle.",
            "location": "Sanctuaire principal",
            "category": "conference",
            "created_at": datetime.utcnow(),
            "updated_at": datetime.utcnow()
        },
        {
            "id": str(uuid.uuid4()),
            "title": "Formation Professionnelle FEPROBA",
            "date": "2025-02-20",
            "time": "14:00",
            "description": "Session de formation professionnelle pour jeunes et adultes. D√©veloppement de comp√©tences pratiques et spirituelles.",
            "location": "Centre FEPROBA",
            "category": "formation",
            "created_at": datetime.utcnow(),
            "updated_at": datetime.utcnow()
        },
        {
            "id": str(uuid.uuid4()),
            "title": "Graduation ISL 2025",
            "date": "2025-05-10",
            "time": "16:00",
            "description": "C√©r√©monie de graduation des √©tudiants en th√©ologie de l'Institut de S√©minaire et Leadership.",
            "location": "Auditorium ISL",
            "category": "celebration",
            "created_at": datetime.utcnow(),
            "updated_at": datetime.utcnow()
        },
        {
            "id": str(uuid.uuid4()),
            "title": "Journ√©e Communautaire",
            "date": "2025-04-05",
            "time": "10:00",
            "description": "√âv√©nement communautaire avec activit√©s pour toute la famille, repas partag√© et t√©moignages inspirants.",
            "location": "Cour de l'√©glise",
            "category": "community",
            "created_at": datetime.utcnow(),
            "updated_at": datetime.utcnow()
        }
    ]
    
    # Clear existing events and insert new ones
    await db.events.delete_many({})
    await db.events.insert_many(events)
    print(f"‚úÖ {len(events)} √©v√©nements initialis√©s")

async def init_testimonials():
    """Initialize testimonials"""
    testimonials = [
        {
            "id": str(uuid.uuid4()),
            "name": "Maria Rodriguez",
            "text": "Cette √©glise a transform√© ma vie. L'amour et le soutien de la communaut√© sont exceptionnels. Je recommande vivement √† tous ceux qui cherchent un foyer spirituel.",
            "role": "Membre fid√®le",
            "created_at": datetime.utcnow()
        },
        {
            "id": str(uuid.uuid4()),
            "name": "Juan Carlos Herrera",
            "text": "Gr√¢ce √† FEPROBA, j'ai pu acqu√©rir des comp√©tences qui ont chang√© mon avenir professionnel. Cette fondation fait vraiment une diff√©rence dans notre communaut√©.",
            "role": "B√©n√©ficiaire FEPROBA",
            "created_at": datetime.utcnow()
        },
        {
            "id": str(uuid.uuid4()),
            "name": "Carmen Santos",
            "text": "L'Institut ISL m'a pr√©par√© spirituellement et acad√©miquement pour servir dans le minist√®re avec excellence. Une formation de haute qualit√©.",
            "role": "Dipl√¥m√©e ISL",
            "created_at": datetime.utcnow()
        }
    ]
    
    await db.testimonials.delete_many({})
    await db.testimonials.insert_many(testimonials)
    print(f"‚úÖ {len(testimonials)} t√©moignages initialis√©s")

async def init_all_data():
    """Initialize all default data"""
    print("üöÄ Initialisation des donn√©es de base...")
    await init_events()
    await init_testimonials()
    print("‚úÖ Initialisation termin√©e avec succ√®s!")

if __name__ == "__main__":
    asyncio.run(init_all_data())